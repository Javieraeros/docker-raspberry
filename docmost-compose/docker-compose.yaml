version: '3.2'

services:
  docmost:
    image: docmost/docmost:latest
    hostname: docmost
    depends_on:
      - db
      - redis
    user: 1000:1000
    environment:
      APP_URL: "https://${HOST}"
      APP_SECRET: $SECRET
      DATABASE_URL: "postgresql://$USER:$PASSWORD@db:5432/$DB?schema=public"
      REDIS_URL: "redis://redis:6379"
      PUID: 1000
      PGID: 1000
    restart: unless-stopped
    volumes:
      - $DATA:/app/data/storage
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.docmost.rule=Host(`${HOST}`)"
        - "traefik.http.routers.docmost.entrypoints=websecure"
        - "traefik.http.routers.docmost.tls.certresolver=letsEncrypt"
        - "traefik.http.services.traefik-docmost.loadbalancer.server.port=$PORT"
      placement:
        constraints:
          - node.hostname == rpi5

  db:
    image: postgres:16-alpine
    hostname: db
    user: 1000:1000
    environment:
      POSTGRES_DB: $DB
      POSTGRES_USER: $USER
      POSTGRES_PASSWORD: "$PASSWORD"
      PUID: 1000
      PGID: 1000
    restart: unless-stopped
    volumes:
      - $DB_DATA:/var/lib/postgresql/data
    deploy:
      placement:
        constraints:
          - node.hostname == rpi5

  redis:
    image: redis:7.2-alpine
    hostname: redis
    restart: unless-stopped
    user: 1000:1000
    environment:
      PUID: 1000
      PGID: 1000
    volumes:
      - $REDIS:/data
    deploy:
      placement:
        constraints:
          - node.hostname == rpi5

networks:
  default:
    external:
      name: traefik_default
